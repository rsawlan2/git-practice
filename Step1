#!/usr/bin/env python3
"""
Minimal fool-proof SSH login to Luna HSM by HSM ID.

- Reads IP/port from resources/hsm_mapping.json
- Prompts once for username and password
- Logs into HSM via SSH using only password auth
- Runs "hsm show" by default
"""

import sys, subprocess, importlib, getpass, json, os, socket

# --- Ensure paramiko installed ---
try:
    import paramiko
except ImportError:
    print("[INFO] Installing paramiko ...")
    subprocess.check_call([sys.executable, "-m", "pip", "install", "paramiko"])
    import paramiko

from paramiko import SSHClient, AutoAddPolicy, AuthenticationException, SSHException

RES_DIR = "resources"
HSM_FILE = os.path.join(RES_DIR, "hsm_mapping.json")

def load_hsm(hsm_id: str) -> dict:
    if not os.path.exists(HSM_FILE):
        raise SystemExit(f"[ERROR] Missing {HSM_FILE}")
    with open(HSM_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    for h in data.get("hsms", []):
        if h.get("id") == hsm_id:
            return h
    raise SystemExit(f"[ERROR] HSM id '{hsm_id}' not found in {HSM_FILE}")

def ssh_run(host: str, port: int, user: str, pwd: str, cmd: str = "hsm show"):
    client = SSHClient()
    client.set_missing_host_key_policy(AutoAddPolicy())  # accept host key automatically
    try:
        client.connect(
            hostname=host,
            port=port,
            username=user,
            password=pwd,
            allow_agent=False,
            look_for_keys=False,
            timeout=20,
        )
        stdin, stdout, stderr = client.exec_command(cmd)
        out = stdout.read().decode(errors="ignore")
        err = stderr.read().decode(errors="ignore")
        rc = stdout.channel.recv_exit_status()
        return out, err, rc
    except AuthenticationException:
        raise SystemExit("[ERROR] Authentication failed (check username/password)")
    except (SSHException, socket.error) as e:
        raise SystemExit(f"[ERROR] SSH connection failed: {e}")
    finally:
        try:
            client.close()
        except Exception:
            pass

def main():
    import argparse
    p = argparse.ArgumentParser()
    p.add_argument("--hsm-id", required=True, help="HSM ID from hsm_mapping.json")
    p.add_argument("--cmd", default="hsm show", help="LunaSH command to run")
    args = p.parse_args()

    hsm = load_hsm(args.hsm_id)
    host = hsm.get("ipAddress") or hsm.get("host")
    port = int(hsm.get("port", 22))

    user = input("Username: ").strip()
    pwd = getpass.getpass("Password: ")

    print(f"[INFO] Connecting to {host}:{port} as {user} ...")
    out, err, rc = ssh_run(host, port, user, pwd, args.cmd)

    print("\n--- STDOUT ---")
    print(out)
    print("--- STDERR ---")
    print(err)
    print(f"[INFO] Exit code: {rc}")

if __name__ == "__main__":
    main()
